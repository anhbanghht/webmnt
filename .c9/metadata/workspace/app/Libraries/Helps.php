{"filter":false,"title":"Helps.php","tooltip":"/app/Libraries/Helps.php","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":86,"column":2},"action":"remove","lines":["<?php namespace App\\Libraries;","\t","\tuse DB;","\tuse App\\Http\\Controllers\\Controller;","    ","\tclass Helps {","\t\t","\t\tstatic function getGroupUser($id){","\t\t\t$data = DB::table('usergroup')->where('id', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getTeacher($id){","\t\t\t$data = DB::table('teachers')->where('id', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getAssignTeacher($taskid){","\t\t\t$data = DB::table('assigns')->where('taskid', '=', $taskid)->get();","\t\t\treturn $data;","\t\t}","\t\tstatic function getSubjectType($subjectname){","\t\t\t$data = DB::table('subject')->where('subject_name', 'like', '%'.$subjectname.'%')->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getWork($id){","\t\t\t$data = DB::table('works')->where('id', '=', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getTypeWork($id){","\t\t\t$data = DB::table('work_types')->where('id', '=', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function checkTask($date,$start,$location){","\t\t\t$result = DB::table('tasks')","\t\t\t\t\t\t->where('state', '=', 1)","\t\t\t\t\t\t->where('date','=',date('Y-m-d',strtotime($date)))","\t\t\t\t\t\t->where('location','=',$location)","\t\t\t\t\t\t->where('start', '<', $start)","\t\t\t\t\t\t->where('end', '>', $start)","\t\t\t\t\t\t->get();","\t\t\tif(count($result) > 0){","\t\t\t\treturn true;","\t\t\t}else{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t\tstatic function checkSendEmail($taskid,$teacherid){","\t\t\t$result = DB::table('assigns')","\t\t\t\t\t\t->where('taskid', $taskid)","\t\t\t\t\t\t->where('teacherid',$teacherid)","\t\t\t\t\t\t->first();","\t\t\tif($result->send == 1){","\t\t\t\treturn true;","\t\t\t}else{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t\t","\t\tstatic function getCustomerTableOnly($id,$table){","\t\t\t$data = DB::table($table)->where('state', 1)->where('id', $id)->first();","\t\t\treturn $data;","\t\t} ","\t\t","\t\tstatic function getCustomerTableAll($table){","\t\t\t$data = DB::table($table)->where('state', 1)->get();","\t\t\treturn $data;","\t\t} ","\t\t","\t\tstatic function getNew(){","\t\t\t$getdate=strtotime(date(\"Y-m-d\", strtotime(date('Y-m-d'))) . \" -5 day\");","\t\t\t$getdate= date('Y-m-d',$getdate);","\t\t\t$news = DB::table('site_article')->where('state',1)->where('created_at','>=',$getdate)->take(5)->orderBy('id', 'desc')->get();","\t\t\treturn $news;","\t\t}","\t\t","\t\tstatic function getTwoCategory(){","\t\t\t$category = DB::table('site_category')->where('state',1)->take(2)->get();","\t\t\treturn $category;","\t\t}","\t\t","\t\tstatic function getArticle($idcategory){","\t\t\t$category = DB::table('site_article')->where('state',1)->where('categoryid','=',$idcategory)->take(4)->orderBy('id', 'desc')->get();","\t\t\treturn $category;","\t\t}","\t\t","\t}","","?>"],"id":16},{"start":{"row":0,"column":0},"end":{"row":89,"column":2},"action":"insert","lines":["<?php namespace App\\Libraries;","\t","\tuse DB;","\tuse App\\Http\\Controllers\\Controller;","    ","\tclass Helps {","\t\tstatic function getUser($id){","\t\t\t$data = DB::table('users')->where('id', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getGroupUser($id){","\t\t\t$data = DB::table('usergroup')->where('id', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getTeacher($id){","\t\t\t$data = DB::table('teachers')->where('id', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getAssignTeacher($taskid){","\t\t\t$data = DB::table('assigns')->where('taskid', '=', $taskid)->get();","\t\t\treturn $data;","\t\t}","\t\tstatic function getSubjectType($subjectname){","\t\t\t$data = DB::table('subject')->where('subject_name', 'like', '%'.$subjectname.'%')->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getWork($id){","\t\t\t$data = DB::table('works')->where('id', '=', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function getTypeWork($id){","\t\t\t$data = DB::table('work_types')->where('id', '=', $id)->first();","\t\t\treturn $data;","\t\t}","\t\tstatic function checkTask($date,$start,$location){","\t\t\t$result = DB::table('tasks')","\t\t\t\t\t\t->where('state', '=', 1)","\t\t\t\t\t\t->where('date','=',date('Y-m-d',strtotime($date)))","\t\t\t\t\t\t->where('location','=',$location)","\t\t\t\t\t\t->where('start', '<', $start)","\t\t\t\t\t\t->where('end', '>', $start)","\t\t\t\t\t\t->get();","\t\t\tif(count($result) > 0){","\t\t\t\treturn true;","\t\t\t}else{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t\tstatic function checkSendEmail($taskid,$teacherid){","\t\t\t$result = DB::table('assigns')","\t\t\t\t\t\t->where('taskid', $taskid)","\t\t\t\t\t\t->where('teacherid',$teacherid)","\t\t\t\t\t\t->first();","\t\t\tif($result->send == 1){","\t\t\t\treturn true;","\t\t\t}else{","\t\t\t\treturn false;","\t\t\t}","\t\t}","\t\t","\t\tstatic function getCustomerTableOnly($id,$table){","\t\t\t$data = DB::table($table)->where('state', 1)->where('id', $id)->first();","\t\t\treturn $data;","\t\t} ","\t\t","\t\tstatic function getCustomerTableAll($table){","\t\t\t$data = DB::table($table)->where('state', 1)->get();","\t\t\treturn $data;","\t\t} ","\t\t","\t\tstatic function getNew(){","\t\t\t$getdate=strtotime(date(\"Y-m-d\", strtotime(date('Y-m-d'))) . \" -5 day\");","\t\t\t$getdate= date('Y-m-d',$getdate);","\t\t\t$news = DB::table('site_article')->where('state',1)->where('created_at','>=',$getdate)->take(5)->orderBy('id', 'desc')->get();","\t\t\treturn $news;","\t\t}","\t\t","\t\tstatic function getTwoCategory(){","\t\t\t$category = DB::table('site_category')->where('state',1)->take(2)->get();","\t\t\treturn $category;","\t\t}","\t\t","\t\tstatic function getArticle($idcategory){","\t\t\t$category = DB::table('site_article')->where('state',1)->where('categoryid','=',$idcategory)->take(4)->orderBy('id', 'desc')->get();","\t\t\treturn $category;","\t\t}","\t\t","\t}","","?>"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":89,"column":2},"end":{"row":89,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1464014178219,"hash":"9979af2ef857ff504c921d54014e5cf9184260bb"}